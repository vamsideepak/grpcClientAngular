// source: src/app/protos/ScannerClient.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = (function() {
  if (this) { return this; }
  if (typeof window !== 'undefined') { return window; }
  if (typeof global !== 'undefined') { return global; }
  if (typeof self !== 'undefined') { return self; }
  return Function('return this')();
}.call(null));

var google_protobuf_empty_pb = require('google-protobuf/google/protobuf/empty_pb.js');
goog.object.extend(proto, google_protobuf_empty_pb);
goog.exportSymbol('proto.ScannerService.V1.ScanDataRequest', null, global);
goog.exportSymbol('proto.ScannerService.V1.ScanDataResponse', null, global);
goog.exportSymbol('proto.ScannerService.V1.ScannerHealthCheck', null, global);
goog.exportSymbol('proto.ScannerService.V1.ScannerHealthCheckResponse', null, global);
goog.exportSymbol('proto.ScannerService.V1.StartScanRequest', null, global);
goog.exportSymbol('proto.ScannerService.V1.StartScanResponse', null, global);
goog.exportSymbol('proto.ScannerService.V1.Status', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ScannerService.V1.ScanDataRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ScannerService.V1.ScanDataRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ScannerService.V1.ScanDataRequest.displayName = 'proto.ScannerService.V1.ScanDataRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ScannerService.V1.ScanDataResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ScannerService.V1.ScanDataResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ScannerService.V1.ScanDataResponse.displayName = 'proto.ScannerService.V1.ScanDataResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ScannerService.V1.StartScanRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ScannerService.V1.StartScanRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ScannerService.V1.StartScanRequest.displayName = 'proto.ScannerService.V1.StartScanRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ScannerService.V1.StartScanResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ScannerService.V1.StartScanResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ScannerService.V1.StartScanResponse.displayName = 'proto.ScannerService.V1.StartScanResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ScannerService.V1.ScannerHealthCheck = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ScannerService.V1.ScannerHealthCheck, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ScannerService.V1.ScannerHealthCheck.displayName = 'proto.ScannerService.V1.ScannerHealthCheck';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ScannerService.V1.ScannerHealthCheckResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ScannerService.V1.ScannerHealthCheckResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ScannerService.V1.ScannerHealthCheckResponse.displayName = 'proto.ScannerService.V1.ScannerHealthCheckResponse';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ScannerService.V1.ScanDataRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.ScannerService.V1.ScanDataRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ScannerService.V1.ScanDataRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ScannerService.V1.ScanDataRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    pmtransactionid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    transactionid: jspb.Message.getFieldWithDefault(msg, 2, ""),
    rgbfront: jspb.Message.getFieldWithDefault(msg, 3, ""),
    rgbback: jspb.Message.getFieldWithDefault(msg, 4, ""),
    irfront: jspb.Message.getFieldWithDefault(msg, 5, ""),
    irback: jspb.Message.getFieldWithDefault(msg, 6, ""),
    lstfront: jspb.Message.getFieldWithDefault(msg, 7, ""),
    lstback: jspb.Message.getFieldWithDefault(msg, 8, ""),
    barcodebuffer: msg.getBarcodebuffer_asB64(),
    magtrack1buffer: msg.getMagtrack1buffer_asB64(),
    magtrack2buffer: msg.getMagtrack2buffer_asB64(),
    magtrack3buffer: msg.getMagtrack3buffer_asB64()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ScannerService.V1.ScanDataRequest}
 */
proto.ScannerService.V1.ScanDataRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ScannerService.V1.ScanDataRequest;
  return proto.ScannerService.V1.ScanDataRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ScannerService.V1.ScanDataRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ScannerService.V1.ScanDataRequest}
 */
proto.ScannerService.V1.ScanDataRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setPmtransactionid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setTransactionid(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setRgbfront(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setRgbback(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setIrfront(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setIrback(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setLstfront(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setLstback(value);
      break;
    case 9:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setBarcodebuffer(value);
      break;
    case 10:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setMagtrack1buffer(value);
      break;
    case 11:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setMagtrack2buffer(value);
      break;
    case 12:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setMagtrack3buffer(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ScannerService.V1.ScanDataRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ScannerService.V1.ScanDataRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ScannerService.V1.ScanDataRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ScannerService.V1.ScanDataRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPmtransactionid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getTransactionid();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getRgbfront();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getRgbback();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getIrfront();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getIrback();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getLstfront();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getLstback();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getBarcodebuffer_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      9,
      f
    );
  }
  f = message.getMagtrack1buffer_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      10,
      f
    );
  }
  f = message.getMagtrack2buffer_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      11,
      f
    );
  }
  f = message.getMagtrack3buffer_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      12,
      f
    );
  }
};


/**
 * optional string PmTransactionID = 1;
 * @return {string}
 */
proto.ScannerService.V1.ScanDataRequest.prototype.getPmtransactionid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.ScannerService.V1.ScanDataRequest} returns this
 */
proto.ScannerService.V1.ScanDataRequest.prototype.setPmtransactionid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string TransactionID = 2;
 * @return {string}
 */
proto.ScannerService.V1.ScanDataRequest.prototype.getTransactionid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.ScannerService.V1.ScanDataRequest} returns this
 */
proto.ScannerService.V1.ScanDataRequest.prototype.setTransactionid = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string RgbFront = 3;
 * @return {string}
 */
proto.ScannerService.V1.ScanDataRequest.prototype.getRgbfront = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.ScannerService.V1.ScanDataRequest} returns this
 */
proto.ScannerService.V1.ScanDataRequest.prototype.setRgbfront = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string RgbBack = 4;
 * @return {string}
 */
proto.ScannerService.V1.ScanDataRequest.prototype.getRgbback = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.ScannerService.V1.ScanDataRequest} returns this
 */
proto.ScannerService.V1.ScanDataRequest.prototype.setRgbback = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string IrFront = 5;
 * @return {string}
 */
proto.ScannerService.V1.ScanDataRequest.prototype.getIrfront = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.ScannerService.V1.ScanDataRequest} returns this
 */
proto.ScannerService.V1.ScanDataRequest.prototype.setIrfront = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string IrBack = 6;
 * @return {string}
 */
proto.ScannerService.V1.ScanDataRequest.prototype.getIrback = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.ScannerService.V1.ScanDataRequest} returns this
 */
proto.ScannerService.V1.ScanDataRequest.prototype.setIrback = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string LstFront = 7;
 * @return {string}
 */
proto.ScannerService.V1.ScanDataRequest.prototype.getLstfront = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.ScannerService.V1.ScanDataRequest} returns this
 */
proto.ScannerService.V1.ScanDataRequest.prototype.setLstfront = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional string LstBack = 8;
 * @return {string}
 */
proto.ScannerService.V1.ScanDataRequest.prototype.getLstback = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.ScannerService.V1.ScanDataRequest} returns this
 */
proto.ScannerService.V1.ScanDataRequest.prototype.setLstback = function(value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};


/**
 * optional bytes BarcodeBuffer = 9;
 * @return {!(string|Uint8Array)}
 */
proto.ScannerService.V1.ScanDataRequest.prototype.getBarcodebuffer = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * optional bytes BarcodeBuffer = 9;
 * This is a type-conversion wrapper around `getBarcodebuffer()`
 * @return {string}
 */
proto.ScannerService.V1.ScanDataRequest.prototype.getBarcodebuffer_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getBarcodebuffer()));
};


/**
 * optional bytes BarcodeBuffer = 9;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getBarcodebuffer()`
 * @return {!Uint8Array}
 */
proto.ScannerService.V1.ScanDataRequest.prototype.getBarcodebuffer_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getBarcodebuffer()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.ScannerService.V1.ScanDataRequest} returns this
 */
proto.ScannerService.V1.ScanDataRequest.prototype.setBarcodebuffer = function(value) {
  return jspb.Message.setProto3BytesField(this, 9, value);
};


/**
 * optional bytes MagTrack1Buffer = 10;
 * @return {!(string|Uint8Array)}
 */
proto.ScannerService.V1.ScanDataRequest.prototype.getMagtrack1buffer = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 10, ""));
};


/**
 * optional bytes MagTrack1Buffer = 10;
 * This is a type-conversion wrapper around `getMagtrack1buffer()`
 * @return {string}
 */
proto.ScannerService.V1.ScanDataRequest.prototype.getMagtrack1buffer_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getMagtrack1buffer()));
};


/**
 * optional bytes MagTrack1Buffer = 10;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getMagtrack1buffer()`
 * @return {!Uint8Array}
 */
proto.ScannerService.V1.ScanDataRequest.prototype.getMagtrack1buffer_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getMagtrack1buffer()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.ScannerService.V1.ScanDataRequest} returns this
 */
proto.ScannerService.V1.ScanDataRequest.prototype.setMagtrack1buffer = function(value) {
  return jspb.Message.setProto3BytesField(this, 10, value);
};


/**
 * optional bytes MagTrack2Buffer = 11;
 * @return {!(string|Uint8Array)}
 */
proto.ScannerService.V1.ScanDataRequest.prototype.getMagtrack2buffer = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 11, ""));
};


/**
 * optional bytes MagTrack2Buffer = 11;
 * This is a type-conversion wrapper around `getMagtrack2buffer()`
 * @return {string}
 */
proto.ScannerService.V1.ScanDataRequest.prototype.getMagtrack2buffer_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getMagtrack2buffer()));
};


/**
 * optional bytes MagTrack2Buffer = 11;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getMagtrack2buffer()`
 * @return {!Uint8Array}
 */
proto.ScannerService.V1.ScanDataRequest.prototype.getMagtrack2buffer_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getMagtrack2buffer()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.ScannerService.V1.ScanDataRequest} returns this
 */
proto.ScannerService.V1.ScanDataRequest.prototype.setMagtrack2buffer = function(value) {
  return jspb.Message.setProto3BytesField(this, 11, value);
};


/**
 * optional bytes MagTrack3Buffer = 12;
 * @return {!(string|Uint8Array)}
 */
proto.ScannerService.V1.ScanDataRequest.prototype.getMagtrack3buffer = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 12, ""));
};


/**
 * optional bytes MagTrack3Buffer = 12;
 * This is a type-conversion wrapper around `getMagtrack3buffer()`
 * @return {string}
 */
proto.ScannerService.V1.ScanDataRequest.prototype.getMagtrack3buffer_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getMagtrack3buffer()));
};


/**
 * optional bytes MagTrack3Buffer = 12;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getMagtrack3buffer()`
 * @return {!Uint8Array}
 */
proto.ScannerService.V1.ScanDataRequest.prototype.getMagtrack3buffer_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getMagtrack3buffer()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.ScannerService.V1.ScanDataRequest} returns this
 */
proto.ScannerService.V1.ScanDataRequest.prototype.setMagtrack3buffer = function(value) {
  return jspb.Message.setProto3BytesField(this, 12, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ScannerService.V1.ScanDataResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.ScannerService.V1.ScanDataResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ScannerService.V1.ScanDataResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ScannerService.V1.ScanDataResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    acknowledgement: jspb.Message.getBooleanFieldWithDefault(msg, 1, false),
    pmtransactionid: jspb.Message.getFieldWithDefault(msg, 2, ""),
    transactionid: jspb.Message.getFieldWithDefault(msg, 3, ""),
    clientstatus: jspb.Message.getFieldWithDefault(msg, 4, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ScannerService.V1.ScanDataResponse}
 */
proto.ScannerService.V1.ScanDataResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ScannerService.V1.ScanDataResponse;
  return proto.ScannerService.V1.ScanDataResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ScannerService.V1.ScanDataResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ScannerService.V1.ScanDataResponse}
 */
proto.ScannerService.V1.ScanDataResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setAcknowledgement(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setPmtransactionid(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setTransactionid(value);
      break;
    case 4:
      var value = /** @type {!proto.ScannerService.V1.Status} */ (reader.readEnum());
      msg.setClientstatus(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ScannerService.V1.ScanDataResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ScannerService.V1.ScanDataResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ScannerService.V1.ScanDataResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ScannerService.V1.ScanDataResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAcknowledgement();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
  f = message.getPmtransactionid();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getTransactionid();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getClientstatus();
  if (f !== 0.0) {
    writer.writeEnum(
      4,
      f
    );
  }
};


/**
 * optional bool acknowledgement = 1;
 * @return {boolean}
 */
proto.ScannerService.V1.ScanDataResponse.prototype.getAcknowledgement = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/**
 * @param {boolean} value
 * @return {!proto.ScannerService.V1.ScanDataResponse} returns this
 */
proto.ScannerService.V1.ScanDataResponse.prototype.setAcknowledgement = function(value) {
  return jspb.Message.setProto3BooleanField(this, 1, value);
};


/**
 * optional string PmTransactionID = 2;
 * @return {string}
 */
proto.ScannerService.V1.ScanDataResponse.prototype.getPmtransactionid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.ScannerService.V1.ScanDataResponse} returns this
 */
proto.ScannerService.V1.ScanDataResponse.prototype.setPmtransactionid = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string TransactionID = 3;
 * @return {string}
 */
proto.ScannerService.V1.ScanDataResponse.prototype.getTransactionid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.ScannerService.V1.ScanDataResponse} returns this
 */
proto.ScannerService.V1.ScanDataResponse.prototype.setTransactionid = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional Status ClientStatus = 4;
 * @return {!proto.ScannerService.V1.Status}
 */
proto.ScannerService.V1.ScanDataResponse.prototype.getClientstatus = function() {
  return /** @type {!proto.ScannerService.V1.Status} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {!proto.ScannerService.V1.Status} value
 * @return {!proto.ScannerService.V1.ScanDataResponse} returns this
 */
proto.ScannerService.V1.ScanDataResponse.prototype.setClientstatus = function(value) {
  return jspb.Message.setProto3EnumField(this, 4, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ScannerService.V1.StartScanRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.ScannerService.V1.StartScanRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ScannerService.V1.StartScanRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ScannerService.V1.StartScanRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    pmtransactionid: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ScannerService.V1.StartScanRequest}
 */
proto.ScannerService.V1.StartScanRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ScannerService.V1.StartScanRequest;
  return proto.ScannerService.V1.StartScanRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ScannerService.V1.StartScanRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ScannerService.V1.StartScanRequest}
 */
proto.ScannerService.V1.StartScanRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setPmtransactionid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ScannerService.V1.StartScanRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ScannerService.V1.StartScanRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ScannerService.V1.StartScanRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ScannerService.V1.StartScanRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPmtransactionid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string PmTransactionID = 1;
 * @return {string}
 */
proto.ScannerService.V1.StartScanRequest.prototype.getPmtransactionid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.ScannerService.V1.StartScanRequest} returns this
 */
proto.ScannerService.V1.StartScanRequest.prototype.setPmtransactionid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ScannerService.V1.StartScanResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.ScannerService.V1.StartScanResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ScannerService.V1.StartScanResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ScannerService.V1.StartScanResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    pmtransactionid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    transactionid: jspb.Message.getFieldWithDefault(msg, 2, ""),
    clientstatus: jspb.Message.getFieldWithDefault(msg, 3, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ScannerService.V1.StartScanResponse}
 */
proto.ScannerService.V1.StartScanResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ScannerService.V1.StartScanResponse;
  return proto.ScannerService.V1.StartScanResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ScannerService.V1.StartScanResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ScannerService.V1.StartScanResponse}
 */
proto.ScannerService.V1.StartScanResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setPmtransactionid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setTransactionid(value);
      break;
    case 3:
      var value = /** @type {!proto.ScannerService.V1.Status} */ (reader.readEnum());
      msg.setClientstatus(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ScannerService.V1.StartScanResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ScannerService.V1.StartScanResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ScannerService.V1.StartScanResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ScannerService.V1.StartScanResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPmtransactionid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getTransactionid();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getClientstatus();
  if (f !== 0.0) {
    writer.writeEnum(
      3,
      f
    );
  }
};


/**
 * optional string PmTransactionID = 1;
 * @return {string}
 */
proto.ScannerService.V1.StartScanResponse.prototype.getPmtransactionid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.ScannerService.V1.StartScanResponse} returns this
 */
proto.ScannerService.V1.StartScanResponse.prototype.setPmtransactionid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string TransactionID = 2;
 * @return {string}
 */
proto.ScannerService.V1.StartScanResponse.prototype.getTransactionid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.ScannerService.V1.StartScanResponse} returns this
 */
proto.ScannerService.V1.StartScanResponse.prototype.setTransactionid = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional Status ClientStatus = 3;
 * @return {!proto.ScannerService.V1.Status}
 */
proto.ScannerService.V1.StartScanResponse.prototype.getClientstatus = function() {
  return /** @type {!proto.ScannerService.V1.Status} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {!proto.ScannerService.V1.Status} value
 * @return {!proto.ScannerService.V1.StartScanResponse} returns this
 */
proto.ScannerService.V1.StartScanResponse.prototype.setClientstatus = function(value) {
  return jspb.Message.setProto3EnumField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ScannerService.V1.ScannerHealthCheck.prototype.toObject = function(opt_includeInstance) {
  return proto.ScannerService.V1.ScannerHealthCheck.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ScannerService.V1.ScannerHealthCheck} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ScannerService.V1.ScannerHealthCheck.toObject = function(includeInstance, msg) {
  var f, obj = {
    statuscode: jspb.Message.getFieldWithDefault(msg, 1, 0),
    statusmessage: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ScannerService.V1.ScannerHealthCheck}
 */
proto.ScannerService.V1.ScannerHealthCheck.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ScannerService.V1.ScannerHealthCheck;
  return proto.ScannerService.V1.ScannerHealthCheck.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ScannerService.V1.ScannerHealthCheck} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ScannerService.V1.ScannerHealthCheck}
 */
proto.ScannerService.V1.ScannerHealthCheck.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setStatuscode(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setStatusmessage(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ScannerService.V1.ScannerHealthCheck.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ScannerService.V1.ScannerHealthCheck.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ScannerService.V1.ScannerHealthCheck} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ScannerService.V1.ScannerHealthCheck.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStatuscode();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getStatusmessage();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional int32 statuscode = 1;
 * @return {number}
 */
proto.ScannerService.V1.ScannerHealthCheck.prototype.getStatuscode = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.ScannerService.V1.ScannerHealthCheck} returns this
 */
proto.ScannerService.V1.ScannerHealthCheck.prototype.setStatuscode = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string statusmessage = 2;
 * @return {string}
 */
proto.ScannerService.V1.ScannerHealthCheck.prototype.getStatusmessage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.ScannerService.V1.ScannerHealthCheck} returns this
 */
proto.ScannerService.V1.ScannerHealthCheck.prototype.setStatusmessage = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ScannerService.V1.ScannerHealthCheckResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.ScannerService.V1.ScannerHealthCheckResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ScannerService.V1.ScannerHealthCheckResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ScannerService.V1.ScannerHealthCheckResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    acknowledgement: jspb.Message.getBooleanFieldWithDefault(msg, 1, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ScannerService.V1.ScannerHealthCheckResponse}
 */
proto.ScannerService.V1.ScannerHealthCheckResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ScannerService.V1.ScannerHealthCheckResponse;
  return proto.ScannerService.V1.ScannerHealthCheckResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ScannerService.V1.ScannerHealthCheckResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ScannerService.V1.ScannerHealthCheckResponse}
 */
proto.ScannerService.V1.ScannerHealthCheckResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setAcknowledgement(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ScannerService.V1.ScannerHealthCheckResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ScannerService.V1.ScannerHealthCheckResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ScannerService.V1.ScannerHealthCheckResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ScannerService.V1.ScannerHealthCheckResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAcknowledgement();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
};


/**
 * optional bool acknowledgement = 1;
 * @return {boolean}
 */
proto.ScannerService.V1.ScannerHealthCheckResponse.prototype.getAcknowledgement = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/**
 * @param {boolean} value
 * @return {!proto.ScannerService.V1.ScannerHealthCheckResponse} returns this
 */
proto.ScannerService.V1.ScannerHealthCheckResponse.prototype.setAcknowledgement = function(value) {
  return jspb.Message.setProto3BooleanField(this, 1, value);
};


/**
 * @enum {number}
 */
proto.ScannerService.V1.Status = {
  READY: 0,
  PROCESSING: 1,
  UNAVAILABLE: 2
};

goog.object.extend(exports, proto.ScannerService.V1);
